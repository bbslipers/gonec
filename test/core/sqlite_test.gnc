ЗагрузитьИВыполнить("test.gnc")

Функция БазовыйТестSqlite()
  путьВременногоФайла = СоздатьВременныйФайл()
  очистка = Функция(путь)
    временныйФайл = Новый Файл(путь)
    временныйФайл.Удалить()
  КонецФункции
  СообщитьФ("Для БД используется временный файл %s\n", путьВременногоФайла)

  Попытка
    бд = Новый SqliteБазаДанных(путьВременногоФайла)

    бд.Выполнить(`
      CREATE TABLE таблица (
        инт INTEGER PRIMARY KEY AUTOINCREMENT,
        булеан BOOLEAN,
        вещ REAL,
        строчка TEXT,
        время DATETIME DEFAULT CURRENT_TIMESTAMP
      );
    `)

    // Обычные параметры
    бд.Выполнить(`
      INSERT INTO таблица (булеан, вещ, строчка, время) VALUES
        (?, ?, ?, ?)
    `, истина, 1.2, "а", Дата("2020-01-01 10:05:04"))

    // Позициональные параметры
    бд.Выполнить(`
      INSERT INTO таблица (булеан, вещ, строчка, время) VALUES
        (?4, ?3, $2, $1)
    `, Дата("2021-01-01 13:32:12"), "б", 3.14, ложь)

    // Именованные параметры
    бд.Выполнить(`
      INSERT INTO таблица (инт, булеан, вещ, строчка, время) VALUES
        (:инт, @булеан, $вещ, :str, @time)
    `, {"str": "с", "инт": 42, "булеан": истина}, {"вещ": 1.69, "time": Дата("2022-05-02 13:33:37")})

    // Когда используем выгрузку, то результаты закрываются автоматически
    результаты = бд.Выбрать(`
      SELECT * FROM таблица;
    `)
    Тест.Равно("результаты запроса всех данных в базе",
      [
        {"инт":1,"булеан":истина,"вещ":1.2,"строчка":"а","время":Дата("2020-01-01 10:05:04")},
        {"инт":2,"булеан":ложь,"вещ":3.14,"строчка":"б","время":Дата("2021-01-01 13:32:12")},
        {"инт":42,"булеан":истина,"вещ":1.69,"строчка":"с","время":Дата("2022-05-02 13:33:37")}
      ], результаты.Выгрузить())

    Тест.Равно("после выгрузки не должно быть следующего элемента в результатах",
      ложь, результаты.Следующий())

    // Когда используем Следующий и Получить, то нужно вызвать Закрыть вручную
    результаты = бд.Выбрать(`
      SELECT * FROM таблица WHERE инт=?;
    `, 1)
    Тест.Равно("есть один элемент в результатах запроса",
      истина, результаты.Следующий())

    значения = результаты.Получить()
    Тест.Равно("правильный элемент в результатах запроса",
      {"инт":1,"булеан":истина,"вещ":1.2,"строчка":"а","время":Дата("2020-01-01 10:05:04")},
      значения)
    Тест.Равно("получение элемента строки результатов через точку",
      [1, истина, 1.2, "а", Дата("2020-01-01 10:05:04")], [значения.инт, значения.булеан, значения.вещ, значения.строчка, значения.время])
    
    Тест.Равно("второго элемента в результатах запроса нет",
      ложь, результаты.Следующий())
    результаты.Закрыть()

  Исключение
    бд.Закрыть()
    очистка(путьВременногоФайла)
    ВызватьИсключение ОписаниеОшибки()
  КонецПопытки

  бд.Закрыть()
  очистка(путьВременногоФайла)
  Возврат истина, ""
КонецФункции

Тест.Исполнить("тест sqlite базы данных", БазовыйТестSqlite)