ЗагрузитьИВыполнить("test.gnc")

Функция ТестСоздание()
  м = []
  Тест.Равно("пустой массив через '[]'", 0, длина(м))

  м = Новый Массив
  Тест.Равно("пустой массив через 'Новый Массив'", 0, длина(м))
  Тест.Равно("пустой массив через 'Новый Массив' равен пустому массиву", [], м)

  м = Новый Массив()
  Тест.Равно("пустой массив через 'Новый Массив()'", 0, длина(м))
  Тест.Равно("пустой массив через 'Новый Массив()' равен пустому массиву", [], м)

  м = Диапазон(0)
  Тест.Равно("пустой массив через 'диапазон(0)'", 0, длина(м))
  Тест.Равно("пустой массив через 'диапазон(0)' равен пустому массиву", [], м)

  Для Каждого н Из [0, 1, 5, 10, 100] Цикл
    м = [](н)
    Тест.Равно(Формат("предзаполненный массив с длиной %d", н), н, длина(м))
  КонецЦикла

  м = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
  Тест.Равно("массив из десяти чисел", 10, длина(м))
  Для н=1 По 10 Цикл
    Тест.Равно(Формат("%d значение массива из десяти чисел", н-1), м[н-1], н)
  КонецЦикла

  м = [1, 1.2, истина, "строчка", [1, 2], {"а": 1}]
  Тест.Равно("ЦелоеЧисло в массиве из разных типов", 1, м[0])
  Тест.Равно("Число в массиве из разных типов", 1.2, м[1])
  Тест.Равно("Булево в массиве из разных типов", истина, м[2])
  Тест.Равно("Строка в массиве из разных типов", "строчка", м[3])
  Тест.Равно("Массив в массиве из разных типов", [1, 2], м[4])
  Тест.Равно("Структура в массиве из разных типов", {"а": 1}, м[5])

  м = Диапазон(10)
  Тест.Равно("диапазон до 10", 10, длина(м))
  Тест.Равно("диапазон до 10 равен массиву", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], м)
  Для н=0 По 9 Цикл
    Тест.Равно(Формат("%d значение диапазона до 10", н), н, м[н])
  КонецЦикла
  
  м = Диапазон(1, 20)
  Тест.Равно("диапазон от 1 до 20", 20, длина(м))
  Тест.Равно("диапазон от 1 до 20 равен массиву",
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], м)
  Для н=1 По 20 Цикл
    Тест.Равно(Формат("%d значение диапазона от 1 до 20", н-1), н,  м[н-1])
  КонецЦикла

  Возврат истина, ""
КонецФункции

Функция ТестСлайсДлинногоМассива(максн)
  Для н=0 По максн Цикл
    Тест.Равно(Формат("слайс [%d:] пустого массива пуст", н), 0, длина([][н:]))
  КонецЦикла

  Для а=0 По максн Цикл
    Для б=а По максн Цикл
      Тест.Равно(Формат("слайс [%d:%d] пустого массива пуст", а, б), 0, длина([][а:б]))
    КонецЦикла
  КонецЦикла

  м = Диапазон(максн)
  Для а=0 По максн-1 Цикл
    Для б=а+1 По максн Цикл
      сл = м[а:б]
      Для инд=а По б-1 Цикл
        Тест.Равно(Формат("Диапазон(%d)[%d:%d][%d] равен %d", максн, а, б, инд-а, инд), инд, сл[инд-а])
      КонецЦикла
    КонецЦикла
  КонецЦикла

  Возврат истина, ""
КонецФункции

Функция ТестСлайсМассиваТипов()
  м = [1, 1.2, истина, "строчка", [1, 2], {"а": 1}]
  Тест.Равно("слайс [6:] массива из разных типов", [], м[6:])
  Тест.Равно("слайс [:6] массива из разных типов", [1, 1.2, истина, "строчка", [1, 2], {"а": 1}], м[:6])
  Тест.Равно("слайс [:3] массива из разных типов", [1, 1.2, истина], м[:3])
  Тест.Равно("слайс [3:] массива из разных типов", ["строчка", [1, 2], {"а": 1}], м[3:])
  Тест.Равно("слайс [2:5] массива из разных типов", [истина, "строчка", [1, 2]], м[2:5])

  Возврат истина, ""
КонецФункции

Функция ТестОперацииНадМассивами(максн)
  Тест.Равно("сложение массивов []+[]", [], []+[])
  Тест.Равно("сложение массивов []+[1, 2, 3]", [1, 2, 3], []+[1, 2, 3])
  Тест.Равно("сложение массивов [1, 2, 3]+[]", [1, 2, 3], [1, 2, 3]+[])
  Тест.Равно("сложение массивов []+[]+[]+[]", [], []+[]+[]+[])
  Тест.Равно("сложение массивов []+[1]+[2]+[3]", [1, 2, 3], []+[1]+[2]+[3])
  Тест.Равно("сложение массивов [1, 2]+[3, 4]+[]+[5, 6]",
    [1, 2, 3, 4, 5, 6], [1, 2]+[3, 4]+[]+[5, 6])
  Тест.Равно("сложение массивов разных типов []+[1]+[1.2]+[истина]+['строчка']+[[1, 2]]+[{'а': 1}]",
    [1, 1.2, истина, "строчка", [1, 2], {"а": 1}],
    []+[1]+[1.2]+[истина]+["строчка"]+[[1, 2]]+[{"а": 1}])

  м1 = []
  Для н=0 По максн Цикл
    м1 = м1 + [н]
    Для а=0 По н Цикл
      Тест.Равно(Формат("массив[%d] полученный сложением массивов [н] от н=0 по н=%d", а, н),
        а, м1[а])
    КонецЦикла
  КонецЦикла


  Тест.Равно("вычитание массивов []-[]", [], []-[])
  Тест.Равно("вычитание массивов []-[1, 2, 3]", [], []-[1, 2, 3])
  Тест.Равно("вычитание массивов [1, 2, 3]-[]", [1, 2, 3], [1, 2, 3]-[])
  Тест.Равно("вычитание массивов []-[]-[]-[]", [], []-[]-[]-[])
  Тест.Равно("вычитание массивов []-[1]-[2]-[3]", [], []-[1]-[2]-[3])
  Тест.Равно("вычитание массивов [1, 2, 3]-[1, 2]-[]-[3]", [], [1, 2, 3]-[1, 2]-[]-[3])
  Тест.Равно("вычитание массивов разных типов [1, 1.2, истина, 'строчка', [1, 2], {'а': 1}]-[]-[1]-[1.2]-[истина]-['строчка']-[[1, 2]]-[{'а': 1}]",
    [],
    [1, 1.2, истина, "строчка", [1, 2], {"а": 1}]-[]-[1]-[1.2]-[истина]-["строчка"]-[[1, 2]]-[{"а": 1}])

  м2 = Диапазон(0, максн)
  Для н=0 По максн Цикл
    м2 = м2 - [н]
    а = 0
    Пока а <= максн-н-1 Цикл
      Тест.Равно(Формат("Диапазон(0, %d)[%d] полученный вычитанием массивов [н] от н=0 по н=%d",
           максн, а, н),
        а+н+1, м2[а])
      а++
    КонецЦикла
  КонецЦикла

  Тест.Равно("xor массивов []%[]", [], []%[])
  Тест.Равно("xor массивов []%[1, 2, 3]", [1, 2, 3], []%[1, 2, 3])
  Тест.Равно("xor массивов [1, 2, 3]%[]", [1, 2, 3], [1, 2, 3]%[])
  Тест.Равно("xor массивов []%[]%[]%[]", [], []%[]%[]%[])
  Тест.Равно("xor массивов []%[1]%[2]%[3]", [1, 2, 3], []%[1]%[2]%[3])
  Тест.Равно("xor массивов [1, 2, 3]%[1, 2, 5]%[4]%[3]", [5, 4], [1, 2, 3]%[1, 2, 5]%[4]%[3])


  Тест.Равно("равенство массивов []==[]", истина, []==[])
  Тест.Равно("равенство массивов [1,2]==[1]+[2]", истина, [1,2]==[1]+[2])
  Тест.Равно("равенство массивов ([1,2]-[3,2])%[5,1]==[5]", истина, ([1,2]-[3,2])%[5,1]==[5])
  Тест.Равно("равенство массивов разных типов [[1, 2], {'а':1}]==[[1]%[2], {'а':1}]",
    истина, [[1, 2], {'а':1}]==[[1]%[2], {'а':1}])
  Тест.Равно("равенство массивов !([]==[1])", ложь, []==[1])
  Тест.Равно("равенство массивов !([1,2]!=[1]-[2])", ложь, [1,2]==[1]-[2])
  Тест.Равно("равенство массивов !(([1,2]-[3,2])%[4,1]!=[5])", ложь, ([1,2]-[3,2])%[4,1]==[5])
  Тест.Равно("равенство массивов разных типов !([[1, 2], {'а':1}]!=[1+2, 'строчка'])",
    ложь, [[1, 2], {'а':1}]==[1+2, 'строчка'])

  м2 = Диапазон(0, максн)
  м3 = Диапазон(максн, максн*2)
  Тест.Равно("равенство массивов Диапазон(0, максн)==[0]+[1]+[2]+...", истина, м1==м2)
  Тест.Равно("равенство массивов !(Диапазон(0, максн)==Диапазон(максн, максн*2)))", ложь, м2==м3)


  Тест.Равно("неравенство массивов []!=[1]", истина, []!=[1])
  Тест.Равно("неравенство массивов [1,2]!=[1]-[2]", истина, [1,2]!=[1]-[2])
  Тест.Равно("неравенство массивов ([1,2]-[3,2])%[4,1]!=[5]", истина, ([1,2]-[3,2])%[4,1]!=[5])
  Тест.Равно("неравенство массивов разных типов [[1, 2], {'а':1}]!=[1+2, 'строчка']",
    истина, [[1, 2], {'а':1}]!=[1+2, 'строчка'])
  Тест.Равно("неравенство массивов !([]!=[])", ложь, []!=[])
  Тест.Равно("неравенство массивов !([1,2]!=[1]+[2])", ложь, [1,2]!=[1]+[2])
  Тест.Равно("неравенство массивов !(([1,2]-[3,2])%[5,1]!=[5])", ложь, ([1,2]-[3,2])%[5,1]!=[5])
  Тест.Равно("неравенство массивов разных типов !([[1, 2], {'а':1}]!=[[1]%[2], {'а':1}])",
    ложь, [[1, 2], {'а':1}]!=[[1]%[2], {'а':1}])

  Тест.Равно("неравенство массивов Диапазон(0, максн)!=Диапазон(максн, максн*2)", истина, м2!=м3)
  Тест.Равно("неравенство массивов !(Диапазон(0, максн)!=[0]+[1]+[2]+...)", ложь, м1!=м2)

  Возврат истина, ""
КонецФункции

Функция ТестКопирование(максн)
  Тест.Равно("копирование пустого массива", [], [].Скопировать())
  Тест.Равно("копирование уникальных элементов пустого массива", [], [].СкопироватьУникальные())
  Тест.Равно("копирование массива с одним элементом", [1], [1].Скопировать())
  Тест.Равно("копирование уникальных элементов массива с одним элементом",
    [1], [1].СкопироватьУникальные())
  Тест.Равно("копирование массива разных типов",
    [1, 1.2, истина, "строчка", [1, 2], {"а": 1}],
    [1, 1.2, истина, "строчка", [1, 2], {"а": 1}].Скопировать())

  Тест.Равно("копирование длинного массива разных чисел",
    Диапазон(0, максн-1), Диапазон(максн).Скопировать())
  Тест.Равно("копирование уникальных элементов длинного массива разных чисел",
    Диапазон(0, максн-1), Диапазон(максн).СкопироватьУникальные())

  м = []
  Для н=0 По максн Цикл
    м += [1]
  КонецЦикла
  Тест.Равно("копирование уникальных элементов длинного массива одинаковых чисел",
    [1], м.СкопироватьУникальные())

  Возврат истина, ""
КонецФункции

Функция ТестСортировка(максн)
  м = []
  м.Сортировать()
  Тест.Равно("сортировка пустого массива", [], м)

  м = [1]
  м.Сортировать()
  Тест.Равно("сортировка массива из одного числа", [1], м)

  м = ["а"]
  м.Сортировать()
  Тест.Равно("сортировка массива из одной строки", ["а"], м)

  м = ["б", "а", "в", "аа", "аб", "аба"]
  м.Сортировать()
  Тест.Равно("сортировка массива из нескольких строк",
    ["а", "аа", "аб", "аба", "б", "в"], м)

  м = Диапазон(0, максн)
  м.Сортировать()
  Тест.Равно(Формат("сортировка массива Диапазон(0, %d)", максн), Диапазон(0, максн), м)

  м = []
  м.СортироватьУбыв()
  Тест.Равно("сортировка пустого массива в обратном порядке", [], м)

  м = [1]
  м.СортироватьУбыв()
  Тест.Равно("сортировка массива из одного числа в обратном порядке", [1], м)

  м = ["а"]
  м.СортироватьУбыв()
  Тест.Равно("сортировка массива из одной строки в обратном порядке", ["а"], м)

  м = ["б", "а", "в", "аа", "аб", "аба"]
  м.СортироватьУбыв()
  Тест.Равно("сортировка массива из нескольких строк в обратном порядке",
    ["в", "б", "аба", "аб", "аа", "а"], м)

  м = Диапазон(0, максн)
  м.СортироватьУбыв()
  рез = Диапазон(0, максн)
  Для н=0 По ((максн+1)>>1)-1 Цикл
    вр = рез[н]
    рез[н] = рез[максн-н]
    рез[максн-н] = вр
  КонецЦикла
  Тест.Равно(Формат("сортировка массива Диапазон(0, %d) в обратном порядке", максн), рез, м)

  Возврат истина, ""
КонецФункции

//Функция ТестВставка(максн)
//  Тест.Равно("вставка числа в пустой массив", [1], [].Вставить(0, 1))
//  Тест.Равно("вставка строки в пустой массив", ["строчка"], [].Вставить(0, "строчка"))
//  Тест.Равно("вставка в конец массива", [1, 2, 3, 4], [1, 2, 3].Вставить(3, 4))
//  Тест.Равно("вставка в начало массива", [4, 1, 2, 3], [1, 2, 3].Вставить(0, 4))
//
//  м = Диапазон(1, максн)
//  Тест.Равно("вставка в начало длинного массива",
//    Диапазон(0, максн), м.Вставить(0, 0))
//  
//  Тест.Равно("вставка в конец длинного массива",
//    Диапазон(1, максн+1), м.Вставить(максн, максн+1))
//
//  Возврат истина, ""
//КонецФункции

//Функция ТестУдаление(максн)
//  Тест.Равно("удаление из массива с одним числом", [], [1].Удалить(0))
//  Тест.Равно("удаление из массива с одной строкой", [], ["строчка"].Удалить(0))
//  Тест.Равно("удаление из массива со вложенным массивом", [1], [[], 1].Удалить(0))
//
//  м = Диапазон(0, максн)
//  Тест.Равно("удаление из начала длинного массива",
//    Диапазон(1, максн), м.Удалить(0))
//  
//  Тест.Равно("удаление из конца длинного массива",
//    Диапазон(0, максн-1), м.Удалить(максн))
//КонецФункции

Тест.Исполнить("создание массива", ТестСоздание)
Тест.Исполнить("слайсы массива с разными типами элементов", ТестСлайсМассиваТипов)
Для Каждого дл из [1, 10, 100, 200] Цикл
  Тест.Исполнить(Формат("слайсы массива длины %d", дл), ТестСлайсДлинногоМассива, дл)
  Тест.Исполнить(Формат("операции над массивами длины %d", дл), ТестОперацииНадМассивами, дл)
  Тест.Исполнить(Формат("копирование массивов длины %d", дл), ТестКопирование, дл)
  Тест.Исполнить(Формат("сортировка массивов длины %d", дл), ТестСортировка, дл)
  // Тест.Исполнить(Формат("вставка в массив длины %d", дл), ТестВставка, дл)
  // Тест.Исполнить(Формат("удаление из массива длины %d", дл), ТестУдаление, дл)
КонецЦикла
