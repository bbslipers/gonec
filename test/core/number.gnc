// Сложение
Целое = 1
Целое++
Целое += 1
Целое = Целое + 1
Сообщить(Целое)

// Вычитание
Целое -= 1
Целое--
Целое = Целое - 1
Сообщить(Целое)

// Умножение
Целое *= 2
Целое = Целое * 2
Сообщить(Целое)

// Деление
Целое /= 2
Целое = Целое / 2
Сообщить(Целое)

// 16-тиричное
Целое = 0xFF
Сообщить(Целое)

// Е-кспоненциальное
Целое = 1e+10
Сообщить(Целое)

// Остаток от деления
Сообщить(4%2)
Сообщить(5%2)
Сообщить(8%3)

// Округление Окр
// Надо переделать:
// Имя заменить на Округлить(ВариантОкругления)
// 0 - Получение целой части числа, дробная просто отбрасывается
// Больше 0 - Округление в большую сторону до соответствующей точности 0.55 до 0.6
// Меньше 0 - Округление в меньшую сторону до соответствующей точности 0.55 до 0.5
Сообщить(Округлить(100,0))
Сообщить(Округлить(11.55,0))  // 11
Сообщить(Округлить(11.55,1))  // 11.6
Сообщить(Округлить(11.55,-1)) // 11.5

// Случайное число
// Надо сделать генератор случайного числа СлучайноеЧисло(НачалоИнтервала,КонецИнтервала)
// По аналогии с методом глобального контекста СлучайнаяСтрока (strings.go)
Случайное = СлучайноеЧисло(0,1) // Получает случайное число в интервале от 0 до 10, оба параметра >= 0
Сообщить(Случайное)


// Получение длины числа и его точности
// Нужно реализовать два метода ДлинаЧисла(Число) и ТочностьЧисла(Число):
Сообщить(ДлинаЧисла(1234.567)) // 8 разделитель целой и дробной части учитывается
Сообщить(ТочностьЧисла(1234.567)) // 3

// Строковое представление числа
// Нужно реализовать метод ЧислоВСтроку(Число,Длина,Точность,ВыводитьЛидирующиеНули,ПредставлениеНуля), возвращающей строковое представление числа
Сообщить(ЧислоВСтроку(1234.567,12,4,Истина,"")) // 0001234.5600 если бы число равнялось нулю результат был бы пустая строка
Сообщить(ЧислоВСтроку(1234.567,10,2,Ложь,"0.00")) // 1234.56 если бы число равнялось нулю результат был бы 0.00
Сообщить(ЧислоВСтроку(0,10,2,Ложь,"Ноль"))
Сообщить(ЧислоВСтроку(12,10,2,Ложь,"Ноль"))
//Сообщить(ЧислоВСтроку(1234.567,4,2,Ложь,"")) // Ошибка: Длинна числа больше чем 4
// На нулевое значение формат не распостраняется - нуль выводится всегда так как определено его представление

// Число и сумма прописью
// Нужно реализовать два метода ЧислоПрописью(Число) и СуммаПрописью(Число)
// только на русском языке :
// https://github.com/moul/number-to-words
// https://github.com/LeKovr/num2word
Сообщить(СуммаПрописью(1231.56))
Сообщить(ЧислоПрописью(1231.56)) // Одна тысяча двести тридцать четыре целых пятьдесят шесть сотых
Сообщить(ЧислоПрописью(1234.56)) // Одна тысяча двести тридцать четыре целых пятьдесят шесть сотых
Сообщить(СуммаПрописью(1234.56)) // Одна тысяча двести тридцать четыре рубля пятьдесят шесть копеек
Сообщить(СуммаПрописью(1234.1)) // Одна тысяча двести тридцать четыре рубля пятьдесят шесть копеек
Сообщить(СуммаПрописью(1234.567)) // Одна тысяча двести тридцать четыре рубля пятьдесят шесть копеек
// Если дробной части нет то выводит:
// Одна тысяча двести тридцать четыре
// Одна тысяча двести тридцать четыре рубля ноль копеек
// Первая буква всегда заглавная
// Предел по значению миллиарды (999 миллиардов) по дробной части у числа сотые
// Если число будет больше выдавать ошибку - слишком большое число
// Если точность будет больше выдавать ошибку - слишком большая точность
// Можно вообще генерить сначала всегда сумму прописью
// а потом просто правильно заменять рубли на целые а копейки на десятые или сотые

// Определение типа значения числа
Сообщить(ТипЗНЧ(1))
Сообщить(ТипЗНЧ(1.00))
Сообщить("Равенство типов:    " + Строка(ТипЗНЧ(1)=ТипЗНЧ(1.00)))
Сообщить("Равенство значений: " + Строка(1=1.00))
// Исправить регистр и должно быть "Число" и "Число"
// Я понимаю что это строго говоря разные типы - но тут это не важно
// Вносит больше путаницы